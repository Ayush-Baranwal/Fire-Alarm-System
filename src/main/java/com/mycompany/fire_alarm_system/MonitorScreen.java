/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author HP
 */
package com.mycompany.fire_alarm_system;
import java.util.Map.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import static com.mycompany.fire_alarm_system.MainScreen.f0;
import static com.mycompany.fire_alarm_system.MainScreen.f1;
import static com.mycompany.fire_alarm_system.MainScreen.f2;
import static com.mycompany.fire_alarm_system.MainScreen.f3;
import static com.mycompany.fire_alarm_system.MainScreen.f4;
import static com.mycompany.fire_alarm_system.MainScreen.f5;

//import java.util.concurrent.Executors;
//import java.util.concurrent.ScheduledExecutorService;
//import java.util.concurrent.ScheduledFuture;
//import java.util.concurrent.TimeUnit;
import java.awt.Color;
import java.awt.Component;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableCellRenderer;


public class MonitorScreen extends javax.swing.JFrame {
    static int choosenFloor=-1;
    static int mailtrigger;
    static java.util.Timer dataUpdateTimer;
    static java.util.Timer mailTimer;
    static boolean isSenTimer=false;
    static boolean isMailTimer=false;
    /**
     * Creates new form Start_Monitoring
     */
    public MonitorScreen() {
        initComponents();
        valuesTable.setDefaultRenderer(String.class, new colorcode()); 
        mailtrigger=0;
    }
    //ScheduledExecutorService ses = Executors.newScheduledThreadPool(1);
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        alertsTable = new javax.swing.JTable();
        alertsLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        valuesTable = new javax.swing.JTable();
        startButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        floorLabel = new javax.swing.JLabel();
        floorMenuBar = new javax.swing.JMenuBar();
        floor0Menu = new javax.swing.JMenu();
        floor1Menu = new javax.swing.JMenu();
        floor2Menu = new javax.swing.JMenu();
        floor3Menu = new javax.swing.JMenu();
        floor4Menu = new javax.swing.JMenu();
        floor5Menu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        alertsTable.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        alertsTable.setForeground(new java.awt.Color(255, 51, 51));
        alertsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Time Stamp", "Type", "Floor", "Location", "Message"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        alertsTable.setGridColor(new java.awt.Color(255, 255, 255));
        alertsTable.setMaximumSize(new java.awt.Dimension(31500, 0));
        alertsTable.setRowHeight(25);
        alertsTable.setShowHorizontalLines(false);
        alertsTable.setShowVerticalLines(false);
        jScrollPane2.setViewportView(alertsTable);
        if (alertsTable.getColumnModel().getColumnCount() > 0) {
            alertsTable.getColumnModel().getColumn(0).setMinWidth(120);
            alertsTable.getColumnModel().getColumn(0).setPreferredWidth(140);
            alertsTable.getColumnModel().getColumn(0).setMaxWidth(300);
            alertsTable.getColumnModel().getColumn(1).setMinWidth(100);
            alertsTable.getColumnModel().getColumn(1).setPreferredWidth(120);
            alertsTable.getColumnModel().getColumn(1).setMaxWidth(300);
            alertsTable.getColumnModel().getColumn(2).setMinWidth(100);
            alertsTable.getColumnModel().getColumn(2).setPreferredWidth(120);
            alertsTable.getColumnModel().getColumn(2).setMaxWidth(300);
            alertsTable.getColumnModel().getColumn(3).setMinWidth(100);
            alertsTable.getColumnModel().getColumn(3).setPreferredWidth(120);
            alertsTable.getColumnModel().getColumn(3).setMaxWidth(300);
            alertsTable.getColumnModel().getColumn(4).setMinWidth(150);
            alertsTable.getColumnModel().getColumn(4).setPreferredWidth(230);
            alertsTable.getColumnModel().getColumn(4).setMaxWidth(300);
        }

        alertsLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        alertsLabel.setForeground(new java.awt.Color(255, 0, 0));
        alertsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        alertsLabel.setText("ALERTS!");

        valuesTable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        valuesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Smoke Sensor(OD/m)", "Heat Sensor(Celsius)", "CO Sensor(P.P.M.)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        valuesTable.setGridColor(new java.awt.Color(255, 255, 255));
        valuesTable.setPreferredSize(new java.awt.Dimension(800, 0));
        valuesTable.setRowHeight(30);
        valuesTable.setRowSelectionAllowed(false);
        valuesTable.setShowGrid(false);
        valuesTable.setSurrendersFocusOnKeystroke(true);
        jScrollPane1.setViewportView(valuesTable);
        if (valuesTable.getColumnModel().getColumnCount() > 0) {
            valuesTable.getColumnModel().getColumn(0).setResizable(false);
            valuesTable.getColumnModel().getColumn(1).setResizable(false);
            valuesTable.getColumnModel().getColumn(2).setResizable(false);
            valuesTable.getColumnModel().getColumn(3).setResizable(false);
        }

        startButton.setBackground(new java.awt.Color(51, 102, 255));
        startButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        startButton.setText("START");
        startButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        startButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startButtonMouseClicked(evt);
            }
        });
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        stopButton.setBackground(new java.awt.Color(255, 51, 51));
        stopButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        stopButton.setText("STOP");
        stopButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        stopButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stopButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 812, Short.MAX_VALUE)
            .addComponent(alertsLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(alertsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        floorLabel.setBackground(new java.awt.Color(248, 148, 6));
        floorLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        floorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        floorLabel.setText("Ground Floor");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(floorLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(floorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
        );

        floorMenuBar.setBackground(new java.awt.Color(255, 153, 153));
        floorMenuBar.setForeground(new java.awt.Color(255, 153, 153));

        floor0Menu.setText("Floor 0");
        floor0Menu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        floor0Menu.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                floor0MenuFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                floor0MenuFocusLost(evt);
            }
        });
        floor0Menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                floor0MenuMouseClicked(evt);
            }
        });
        floorMenuBar.add(floor0Menu);

        floor1Menu.setText("Floor 1");
        floor1Menu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        floor1Menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                floor1MenuMouseClicked(evt);
            }
        });
        floorMenuBar.add(floor1Menu);

        floor2Menu.setText("Floor 2");
        floor2Menu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        floor2Menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                floor2MenuMouseClicked(evt);
            }
        });
        floorMenuBar.add(floor2Menu);

        floor3Menu.setText("Floor 3");
        floor3Menu.setContentAreaFilled(false);
        floor3Menu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        floor3Menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                floor3MenuMouseClicked(evt);
            }
        });
        floorMenuBar.add(floor3Menu);

        floor4Menu.setText("Floor 4");
        floor4Menu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        floor4Menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                floor4MenuMouseClicked(evt);
            }
        });
        floorMenuBar.add(floor4Menu);

        floor5Menu.setText("Floor 5");
        floor5Menu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        floor5Menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                floor5MenuMouseClicked(evt);
            }
        });
        floorMenuBar.add(floor5Menu);

        setJMenuBar(floorMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void stopButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopButtonMouseClicked
        // TODO add your handling code here:
        MainScreen.dashBoard.setVisible(true);
        if(isSenTimer==true)
            MonitorScreen.dataUpdateTimer.cancel();
        if(isMailTimer==true)
            MonitorScreen.mailTimer.cancel();
        this.dispose();
    }//GEN-LAST:event_stopButtonMouseClicked

    private void startButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startButtonMouseClicked
        // TODO add your handling code here:
        choosenFloor=0;
        Location.allSet();
        dataUpdateTimer = new java.util.Timer();
        TimerTask task = new DataUpdate();
        dataUpdateTimer.scheduleAtFixedRate(task, 0, 2000);
        isSenTimer=true;
        DefaultTableModel tM0=(DefaultTableModel)valuesTable.getModel();
        for(Entry<String,Location> mp : f0.entrySet()){
        String data[]={mp.getKey(),String.valueOf(mp.getValue().smokeCrValue),String.valueOf(mp.getValue().heatCrValue),String.valueOf(mp.getValue().coCrValue)};
        tM0.addRow(data);
        }
        
        mailTimer = new java.util.Timer();
        TimerTask mailtask = new DataUpdate(){
            @Override
            public void run(){
                if(mailtrigger==0&&alertsTable.getRowCount()>0){
            Email.send("rsrivastava2341@gmail.com","1as23df4",MainScreen.emailID,"Fire Alert in CC3!","One or more sensors have breached their threshold and alarm has been triggered. Immediate action required.");
            mailtrigger=1;
                    try {
                        Thread.sleep(5000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(MonitorScreen.class.getName()).log(Level.SEVERE, null, ex);
                    }
                JOptionPane.showMessageDialog(jPanel2,"Email Alert Sent.");}
            }
    };
        mailTimer.scheduleAtFixedRate(mailtask, 0, 15000); 
        isMailTimer=true;

    }//GEN-LAST:event_startButtonMouseClicked

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startButtonActionPerformed

    private void floor1MenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_floor1MenuMouseClicked
        // TODO add your handling code here:
        choosenFloor=1;
        floorLabel.setText("1st Floor");
        DefaultTableModel tM1=(DefaultTableModel)valuesTable.getModel();
        if(tM1.getRowCount()!=0){
            int c =tM1.getRowCount();
        for(int i=0;i<c;i++){
            tM1.removeRow(0);
        }}
        DefaultTableModel tM12=(DefaultTableModel)valuesTable.getModel();
        for(Entry<String,Location> mp : f1.entrySet()){       
        String data[]={mp.getKey(),String.valueOf(mp.getValue().smokeCrValue),String.valueOf(mp.getValue().heatCrValue),String.valueOf(mp.getValue().coCrValue)};
        tM12.addRow(data);
        }
    }//GEN-LAST:event_floor1MenuMouseClicked

    private void floor2MenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_floor2MenuMouseClicked
        // TODO add your handling code here:
        choosenFloor=2;
        floorLabel.setText("2nd Floor");
        DefaultTableModel tM2=(DefaultTableModel)valuesTable.getModel();
       if(tM2.getRowCount()!=0){
            int c =tM2.getRowCount();
        for(int i=0;i<c;i++){
            tM2.removeRow(0);
        }}
        DefaultTableModel tM22=(DefaultTableModel)valuesTable.getModel();
        for(Entry<String,Location> mp : f2.entrySet()){
        String data[]={mp.getKey(),String.valueOf(mp.getValue().smokeCrValue),String.valueOf(mp.getValue().heatCrValue),String.valueOf(mp.getValue().coCrValue)};
        tM22.addRow(data);
        }
    }//GEN-LAST:event_floor2MenuMouseClicked

    private void floor0MenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_floor0MenuMouseClicked
        // TODO add your handling code here:
        choosenFloor=0;
        floorLabel.setText("Ground Floor");
        DefaultTableModel tM0=(DefaultTableModel)valuesTable.getModel();
        if(tM0.getRowCount()!=0){
            int c =tM0.getRowCount();
        for(int i=0;i<c;i++){
            tM0.removeRow(0);
        }}
        DefaultTableModel tM02=(DefaultTableModel)valuesTable.getModel();
        for(Entry<String,Location> mp : f0.entrySet()){
        String data[]={mp.getKey(),String.valueOf(mp.getValue().smokeCrValue),String.valueOf(mp.getValue().heatCrValue),String.valueOf(mp.getValue().coCrValue)};
        tM02.addRow(data);
        }
    }//GEN-LAST:event_floor0MenuMouseClicked

    private void floor3MenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_floor3MenuMouseClicked
        // TODO add your handling code here:
        choosenFloor=3;
        floorLabel.setText("3rd Floor");
        DefaultTableModel tM3=(DefaultTableModel)valuesTable.getModel();
        if(tM3.getRowCount()!=0){
            int c =tM3.getRowCount();
        for(int i=0;i<c;i++){
            tM3.removeRow(0);
        }}
        DefaultTableModel tM32=(DefaultTableModel)valuesTable.getModel();
        for(Entry<String,Location> mp : f3.entrySet()){
        String data[]={mp.getKey(),String.valueOf(mp.getValue().smokeCrValue),String.valueOf(mp.getValue().heatCrValue),String.valueOf(mp.getValue().coCrValue)};
        tM32.addRow(data);
        }
    }//GEN-LAST:event_floor3MenuMouseClicked

    private void floor4MenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_floor4MenuMouseClicked
        // TODO add your handling code here:
        choosenFloor=4;
        floorLabel.setText("4th Floor");
        DefaultTableModel tM4=(DefaultTableModel)valuesTable.getModel();
        if(tM4.getRowCount()!=0){
            int c =tM4.getRowCount();
        for(int i=0;i<c;i++){
            tM4.removeRow(0);
        }}
        DefaultTableModel tM42=(DefaultTableModel)valuesTable.getModel();
        for(Entry<String,Location> mp : f4.entrySet()){
        String data[]={mp.getKey(),String.valueOf(mp.getValue().smokeCrValue),String.valueOf(mp.getValue().heatCrValue),String.valueOf(mp.getValue().coCrValue)};
        tM42.addRow(data);
        }
    }//GEN-LAST:event_floor4MenuMouseClicked

    private void floor5MenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_floor5MenuMouseClicked
        // TODO add your handling code here:
        choosenFloor=5;
        floorLabel.setText("5th Floor");
        DefaultTableModel tM5=(DefaultTableModel)valuesTable.getModel();
        if(tM5.getRowCount()!=0){
            int c =tM5.getRowCount();
        for(int i=0;i<c;i++){
            tM5.removeRow(0);
        }}
        DefaultTableModel tM52=(DefaultTableModel)valuesTable.getModel();
        for(Entry<String,Location> mp : f5.entrySet()){
        String data[]={mp.getKey(),String.valueOf(mp.getValue().smokeCrValue),String.valueOf(mp.getValue().heatCrValue),String.valueOf(mp.getValue().coCrValue)};
        tM52.addRow(data);
        }
    }//GEN-LAST:event_floor5MenuMouseClicked

    private void floor0MenuFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_floor0MenuFocusGained
        // TODO add your handling code here:
        floor0Menu.setForeground(new java.awt.Color(230, 57, 70));
    }//GEN-LAST:event_floor0MenuFocusGained

    private void floor0MenuFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_floor0MenuFocusLost
        // TODO add your handling code here:
        floor0Menu.setForeground(new java.awt.Color(29,53,87));
    }//GEN-LAST:event_floor0MenuFocusLost
   
    /**
     * @param args the command line arguments
     */
    public class colorcode extends DefaultTableCellRenderer {

    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus,int row,int col) {
        float v0=0,v1=0,v2=0,v3=0;
        Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, col);
        switch(col) {
            case 1:
                v1 = Float.parseFloat((String) table.getModel().getValueAt(row, col));
            case 2:
                v2 = Float.parseFloat((String) table.getModel().getValueAt(row, col));
            case 3:
                v3 = Float.parseFloat((String) table.getModel().getValueAt(row, col));
            default:
                v0 = Float.parseFloat((String) table.getModel().getValueAt(row, col));
        }
        if(v1>Location.smokeThValue&&col==1)
            c.setForeground(Color.red);
        else if(v2>Location.heatThValue&&col==2)
            c.setForeground(Color.red);
        else if(v3>Location.coThValue&&col==3)
            c.setForeground(Color.red);
        else
            c.setForeground(Color.black);

        return c;
    }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MonitorScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MonitorScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MonitorScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MonitorScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MonitorScreen().setVisible(true);
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel alertsLabel;
    protected static javax.swing.JTable alertsTable;
    private javax.swing.JMenu floor0Menu;
    private javax.swing.JMenu floor1Menu;
    private javax.swing.JMenu floor2Menu;
    private javax.swing.JMenu floor3Menu;
    private javax.swing.JMenu floor4Menu;
    private javax.swing.JMenu floor5Menu;
    private javax.swing.JLabel floorLabel;
    private javax.swing.JMenuBar floorMenuBar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JButton startButton;
    private javax.swing.JButton stopButton;
    protected static javax.swing.JTable valuesTable;
    // End of variables declaration//GEN-END:variables
}
